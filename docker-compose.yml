version: '3.9'

x-volume-install:
  &volume-install
    type: bind
    source: ${ZWASTE_INSTALL_PATH}
    target: /var/www/html

networks:
  z-waste-net:
    name: z-waste-network
    driver: bridge

services:
  httpd:
    container_name: httpd
    build:
      context: .docker
      dockerfile: httpd.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - DOMAIN
        - CERT
        - KEY
    image: z-waste-httpd:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - <<: *volume-install
    depends_on:
      - mysql
      - mailhog
    networks:
      - z-waste-net

  composer:
    container_name: composer
    image: z-waste-httpd:latest
    volumes:
      - <<: *volume-install
    depends_on:
      - httpd
    entrypoint: [ 'composer' ]
    networks:
      - z-waste-net

  artisan:
    container_name: artisan
    image: z-waste-httpd:latest
    volumes:
      - <<: *volume-install
    depends_on:
      - httpd
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - z-waste-net

  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: zcalendar
      MYSQL_USER: zcalendar
      MYSQL_PASSWORD: zcalendar
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    command: [ "--log_bin_trust_function_creators=1" ]
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - z-waste-net

  npm:
    container_name: npm:latest
    build:
      context: .docker
      dockerfile: npm.dockerfile
      args:
        - NPM_TOKEN=${NPM_TOKEN}
        - SSH_AUTH_SOCK=${SSH_AUTH_SOCK}
    environment:
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK}
    volumes:
      - <<: *volume-install
      - type: bind
        source: ${SSH_AUTH_SOCK}
        target: ${SSH_AUTH_SOCK}
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - z-waste-net

  mailhog:
    container_name: mailhog
    image: ${MAILHOG_IMAGE}:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - z-waste-net

volumes:
  mysql-data:

secrets:
  token:
    environment: TOKEN