x-volume-install:
  &volume-install
    type: bind
    source: ${HOST_INSTALL_PATH}
    target: /var/www/html

services:
  httpd:
    container_name: httpd
    build:
      context: .docker
      dockerfile: httpd.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - DOMAIN=${DOMAIN}
    image: z-waste-httpd:latest
    ports:
      - "80:80"
      - "443:443"
      - "5173:5173"
    volumes:
      - <<: *volume-install
      - ./.docker/httpd/cert/${CERT}:/etc/apache2/ssl/cert.pem
      - ./.docker/httpd/cert/${KEY}:/etc/apache2/ssl/key.pem
      - ~/PhpstormProjects/z-sso:/var/www/z-sso
    depends_on:
      - mysql
      - mailhog

  composer:
    container_name: composer
    image: z-waste-httpd:latest
    volumes:
      - <<: *volume-install
      - ~/PhpstormProjects/z-sso:/var/www/z-sso
    environment:
      - XDEBUG_MODE=off
    dns:
      - 192.168.0.1
    depends_on:
      - httpd
    entrypoint: [ 'composer' ]

  artisan:
    container_name: artisan
    image: z-waste-httpd:latest
    environment:
      - PHP_IDE_CONFIG=serverName=httpd
    volumes:
      - <<: *volume-install
      - ~/PhpstormProjects/z-sso:/var/www/z-sso
    tty: true
    depends_on:
      - httpd
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]

  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: ${DB_HOST}
    command: [ "--log_bin_trust_function_creators=1" ]
    volumes:
      - ${HOST_DB_PATH}/${CLIENT_NAME}:/var/lib/mysql

  npm:
    container_name: npm:latest
    build:
      context: .docker
      dockerfile: npm.dockerfile
      ssh:
        - default
      args:
        - NPM_TOKEN=${NPM_TOKEN}
    environment:
      - SSH_AUTH_SOCK=/run/host-services/ssh-auth.sock
    volumes:
      - <<: *volume-install
      - type: bind
        source: /run/host-services/ssh-auth.sock
        target: /run/host-services/ssh-auth.sock
    ports:
      - "3000:3000"
      - "3001:3001"
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]

  mailhog:
    container_name: mailhog
    image: ${MAILHOG_IMAGE:-mailhog/mailhog}:latest
    ports:
      - "1025:1025"
      - "8025:8025"
